# kubectl -n kube-system describe cm kubeadm-config
# SOURCE: https://godoc.org/k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm/v1beta1
---
apiVersion: kubeadm.k8s.io/v1beta1
kind: InitConfiguration
---
kind: ClusterConfiguration
apiVersion: kubeadm.k8s.io/v1beta1
apiServer:
  certSANs:
  - 192.168.205.10
  extraArgs:
    authorization-mode: Node,RBAC
    advertise-address: 192.168.205.10
    allow-privileged: true
    client-ca-file: /etc/kubernetes/pki/ca.crt
    enable-admission-plugins: NodeRestriction
    enable-bootstrap-token-auth: true
    etcd-cafile: /etc/kubernetes/pki/etcd/ca.crt
    etcd-certfile: /etc/kubernetes/pki/apiserver-etcd-client.crt
    etcd-keyfile: /etc/kubernetes/pki/apiserver-etcd-client.key
    etcd-servers: https://127.0.0.1:2379
    insecure-port: 0
    kubelet-client-certificate: /etc/kubernetes/pki/apiserver-kubelet-client.crt
    kubelet-client-key: /etc/kubernetes/pki/apiserver-kubelet-client.key
    kubelet-preferred-address-types: InternalIP,ExternalIP,Hostname
    proxy-client-cert-file: /etc/kubernetes/pki/front-proxy-client.crt
    proxy-client-key-file: /etc/kubernetes/pki/front-proxy-client.key
    requestheader-allowed-names: front-proxy-client
    requestheader-client-ca-file: /etc/kubernetes/pki/front-proxy-ca.crt
    requestheader-extra-headers-prefix: X-Remote-Extra-
    requestheader-group-headers: X-Remote-Group
    requestheader-username-headers: X-Remote-User
    secure-port: 6443
    service-account-key-file: /etc/kubernetes/pki/sa.pub
    service-cluster-ip-range: 10.96.0.0/12
    tls-cert-file: /etc/kubernetes/pki/apiserver.crt
    tls-private-key-file: /etc/kubernetes/pki/apiserver.key
  timeoutForControlPlane: 4m0s
certificatesDir: /etc/kubernetes/pki
clusterName: kubernetes
controlPlaneEndpoint: ""
controllerManager:
  extraArgs:
    address: 0.0.0.0
    allocate-node-cidrs: true
    authentication-kubeconfig: /etc/kubernetes/controller-manager.conf
    authorization-kubeconfig: /etc/kubernetes/controller-manager.conf
    client-ca-file: /etc/kubernetes/pki/ca.crt
    cluster-cidr: 172.16.0.0/16
    cluster-signing-cert-file: /etc/kubernetes/pki/ca.crt
    cluster-signing-key-file: /etc/kubernetes/pki/ca.key
    controllers: "*,bootstrapsigner,tokencleaner"
    kubeconfig: /etc/kubernetes/controller-manager.conf
    leader-elect: true
    node-cidr-mask-size: 24
    requestheader-client-ca-file: /etc/kubernetes/pki/front-proxy-ca.crt
    root-ca-file: /etc/kubernetes/pki/ca.crt
    service-account-private-key-file: /etc/kubernetes/pki/sa.key
    use-service-account-credentials: true
dns:
  type: CoreDNS
etcd:
  local:
    dataDir: /var/lib/etcd
imageRepository: k8s.gcr.io
kubernetesVersion: v1.13.4
networking:
  dnsDomain: cluster.local
  podSubnet: 172.16.0.0/16
  serviceSubnet: 10.96.0.0/12
scheduler:
  extraArgs:
    address: 0.0.0.0
    kubeconfig: /etc/kubernetes/scheduler.conf
    leader-elect: true
---
# KubeProxyConfiguration: {}
kind: KubeProxyConfiguration
apiVersion: kubeproxy.config.k8s.io/v1alpha1
## kube-proxy specific options here
# bindAddress: 0.0.0.0
# clientConnection:
#   acceptContentTypes: ""
#   burst: 10
#   contentType: application/vnd.kubernetes.protobuf
#   kubeconfig: /var/lib/kube-proxy/kubeconfig.conf
#   qps: 5
# clusterCIDR: 172.16.0.0/16
# configSyncPeriod: 15m0s
# conntrack:
#   max: null
#   maxPerCore: 32768
#   min: 131072
#   tcpCloseWaitTimeout: 1h0m0s
#   tcpEstablishedTimeout: 24h0m0s
# enableProfiling: false
# healthzBindAddress: 0.0.0.0:10256
# hostnameOverride: ""
# iptables:
#   masqueradeAll: false
#   masqueradeBit: 14
#   minSyncPeriod: 0s
#   syncPeriod: 30s
# ipvs:
#   excludeCIDRs: null
#   minSyncPeriod: 0s
#   scheduler: ""
#   syncPeriod: 30s
# metricsBindAddress: 127.0.0.1:10249
# mode: ""
# nodePortAddresses: null
# oomScoreAdj: -999
# portRange: ""
# resourceContainer: /kube-proxy
# udpIdleTimeout: 250ms
---
# KubeletConfiguration: {}
kind: KubeletConfiguration
apiVersion: kubelet.config.k8s.io/v1beta1
## kubelet specific options here
# address: 0.0.0.0
# authentication:
#   anonymous:
#     enabled: false
#   webhook:
#     cacheTTL: 2m0s
#     enabled: true
#   x509:
#     clientCAFile: /etc/kubernetes/pki/ca.crt
# authorization:
#   mode: Webhook
#   webhook:
#     cacheAuthorizedTTL: 5m0s
#     cacheUnauthorizedTTL: 30s
# cgroupDriver: cgroupfs
# cgroupsPerQOS: true
# clusterDNS:
# - 10.96.0.10
# clusterDomain: cluster.local
# configMapAndSecretChangeDetectionStrategy: Watch
# containerLogMaxFiles: 5
# containerLogMaxSize: 10Mi
# contentType: application/vnd.kubernetes.protobuf
# cpuCFSQuota: true
# cpuCFSQuotaPeriod: 100ms
# cpuManagerPolicy: none
# cpuManagerReconcilePeriod: 10s
# enableControllerAttachDetach: true
# enableDebuggingHandlers: true
# enforceNodeAllocatable:
# - pods
# eventBurst: 10
# eventRecordQPS: 5
# evictionHard:
#   imagefs.available: 15%
#   memory.available: 100Mi
#   nodefs.available: 10%
#   nodefs.inodesFree: 5%
# evictionPressureTransitionPeriod: 5m0s
# failSwapOn: true
# fileCheckFrequency: 20s
# hairpinMode: promiscuous-bridge
# healthzBindAddress: 127.0.0.1
# healthzPort: 10248
# httpCheckFrequency: 20s
# imageGCHighThresholdPercent: 85
# imageGCLowThresholdPercent: 80
# imageMinimumGCAge: 2m0s
# iptablesDropBit: 15
# iptablesMasqueradeBit: 14
# kubeAPIBurst: 10
# kubeAPIQPS: 5
# makeIPTablesUtilChains: true
# maxOpenFiles: 1000000
# maxPods: 110
# nodeLeaseDurationSeconds: 40
# nodeStatusReportFrequency: 1m0s
# nodeStatusUpdateFrequency: 10s
# oomScoreAdj: -999
# podPidsLimit: -1
# port: 10250
# registryBurst: 10
# registryPullQPS: 5
# resolvConf: /etc/resolv.conf
# rotateCertificates: true
# runtimeRequestTimeout: 2m0s
# serializeImagePulls: true
# staticPodPath: /etc/kubernetes/manifests
# streamingConnectionIdleTimeout: 4h0m0s
# syncFrequency: 1m0s
# volumeStatsAggPeriod: 1m0s


